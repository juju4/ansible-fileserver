---

- name: Verify
  hosts: fileserver
  pre_tasks:
    - name: Debian | set facts
      set_fact:
        verify_pkgs:
          - samba
          - samba-common
        verify_ps:
          - smbd
          - nmbd
      when: ansible_os_family == "Debian"
    - name: RedHat | set facts
      set_fact:
        verify_pkgs:
          - samba
          - samba-common
        verify_ps:
          - smbd
          - nmbd
      when: ansible_os_family == "RedHat"
  tasks:
    - name: Gather package facts
      package_facts:
        manager: auto
    - name: Validate that needed packages are present
      assert:
        that: ansible_facts.packages[item]
      with_items: "{{ verify_pkgs }}"

    - name: Check /opt/share
      stat:
        path: /share
      register: share
    - name: Validate share directory
      assert:
        that: share.stat.exists and share.stat.isdir and share.stat.pw_name == 'nobody'

    - name: Fetch content of smb.conf
      slurp:
        src: /etc/samba/smb.conf
      register: conf
    - name: Validate smb.conf
      assert:
        that: >
          "'[share]' in conf['content'] | b64decode"

    - name: Ensure process is running
      command: "pgrep -u root {{ item }}"
      register: ps
      changed_when: false
      with_items: "{{ verify_ps }}"
      when: not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
    - name: Validate ps output
      assert:
        that: item.stdout
      with_items: "{{ ps.results }}"
      when: not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
    - name: Ensure ports are listening
      wait_for:
        host: "{{ item.h }}"
        port: "{{ item.p }}"
        timeout: 10
      with_items:
        - {h: 'localhost', p: 445}
      when: not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
